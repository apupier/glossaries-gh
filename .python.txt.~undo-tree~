"7a35300980092f1e596a7f2ec141b6fed1c8a6ec"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#5=[nil nil ((24172 . 24173) (t 24596 1482 307809 272000)) nil (24596 1483 849758 349000) 0 nil]) ((#("        " 0 8 (fontified t)) . 24406) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) 24414) nil (24596 1482 297891 554000) 0 (:register 1)]) ((24373 . 24414) (#("        del self.examples[id]        " 0 37 (fontified t)) . -24373) (undo-tree-id200 . -37) (undo-tree-id201 . -37) (undo-tree-id202 . -37) (undo-tree-id203 . -37) (undo-tree-id204 . -37) 24410 (t 24596 1477 735926 461000)) nil (24596 1482 297917 524000) 0 nil]) ((24339 . 24410) (#("    Delete from a dictionary.
    del self.examples[id]        " 0 29 (fontified t insert-in-front-hooks #1=(annotate--remove-annotation-property)) 29 30 (fontified t display nil face default insert-in-front-hooks #1#) 30 34 (fontified t) 34 54 (insert-in-front-hooks #1# fontified t) 54 55 (insert-in-front-hooks #1# fontified t) 55 63 (insert-in-front-hooks #1# fontified t)) . -24339) (undo-tree-id37 . -30) (undo-tree-id38 . -63) (undo-tree-id39 . -63) (undo-tree-id40 . -63) (undo-tree-id41 . -63) (undo-tree-id42 . -63) (undo-tree-id43 . -63) (undo-tree-id44 . -63) (undo-tree-id45 . -63) (undo-tree-id46 . -63) (undo-tree-id47 . -63) (undo-tree-id48 . -63) (undo-tree-id49 . -63) (undo-tree-id50 . -63) (undo-tree-id51 . -63) (undo-tree-id52 . -63) (undo-tree-id53 . -63) (undo-tree-id54 . -63) (undo-tree-id55 . -63) (undo-tree-id56 . -30) (undo-tree-id57 . -63) (undo-tree-id58 . -30) (undo-tree-id59 . -13) (undo-tree-id60 . -13) (undo-tree-id61 . -63) (undo-tree-id62 . -30) (undo-tree-id63 . -63) 24402) nil (24596 1477 721606 744000) 0 (:register 1)]) ((24317 . 24330)) nil (24596 1477 721623 147000) 0 nil]) ((24317 . 24325)) nil (24596 1477 721629 86000) 0 nil]) ((24316 . 24317)) nil (24596 1477 721634 831000) 0 nil]) ((#("
" 0 1 (insert-in-front-hooks #1# display nil fontified t)) . -24380) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 24381) nil (24596 1477 721671 798000) 0 nil]) ((#("
" 0 1 (fontified t)) . -24381) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 24382) nil (24596 1477 721697 661000) 0 nil]) ((nil rear-nonsticky nil 24381 . 24382) (nil fontified nil 24381 . 24382) (nil fontified nil 24380 . 24381) (nil fontified nil 24372 . 24380) (nil fontified nil 24371 . 24372) (nil fontified nil 24351 . 24371) (nil fontified nil 24347 . 24351) (nil fontified nil 24317 . 24347) (24317 . 24382)) nil (24596 1477 721711 648000) 0 nil]) ((24315 . 24317)) nil (24596 1477 721729 572000) 0 nil]) ((#("    Delete from a dictionary.
    del self.examples[id]        

" 0 30 (fontified t) 30 34 (fontified t) 34 54 (fontified t insert-in-front-hooks #1#) 54 55 (fontified t insert-in-front-hooks #1#) 55 63 (fontified t insert-in-front-hooks #1#) 63 64 (fontified t insert-in-front-hooks #1# display nil face default) 64 65 (fontified t)) . 24126) (undo-tree-id87 . -4) (undo-tree-id88 . -65) (undo-tree-id89 . -65) (undo-tree-id90 . -29) (undo-tree-id91 . -64) (undo-tree-id92 . -64) (undo-tree-id93 . -29) (undo-tree-id94 . -65) (undo-tree-id95 . -65) (undo-tree-id96 . -64) (undo-tree-id97 . -65) (undo-tree-id98 . -65) (undo-tree-id99 . -65) (undo-tree-id100 . -65) (undo-tree-id101 . -65) (undo-tree-id102 . -65) (undo-tree-id103 . -65) (undo-tree-id104 . -65) (undo-tree-id105 . -65) (undo-tree-id106 . -65) (undo-tree-id107 . -65) (undo-tree-id108 . -65) (undo-tree-id109 . -65) (undo-tree-id110 . -65) (undo-tree-id111 . -65) (undo-tree-id112 . -65) (undo-tree-id113 . -65) (undo-tree-id114 . -65) (undo-tree-id115 . -65) (undo-tree-id116 . -65) (undo-tree-id117 . -65) (undo-tree-id118 . -65) (undo-tree-id119 . -65) (undo-tree-id120 . -65) (undo-tree-id121 . -65) (undo-tree-id122 . -65) (undo-tree-id123 . -65) (undo-tree-id124 . -65) (undo-tree-id125 . -65) (undo-tree-id126 . -65) (undo-tree-id127 . -65) (undo-tree-id128 . -65) (undo-tree-id129 . -65) (undo-tree-id130 . -65) (undo-tree-id131 . -65) (undo-tree-id132 . -65) (undo-tree-id133 . -65) (undo-tree-id134 . -65) (undo-tree-id135 . -65) (undo-tree-id136 . -65) (undo-tree-id137 . -65) (undo-tree-id138 . -65) (undo-tree-id139 . -65) (undo-tree-id140 . -65) (undo-tree-id141 . -65) (undo-tree-id142 . -29) (undo-tree-id143 . -30) (undo-tree-id144 . -30) (undo-tree-id145 . -29) (undo-tree-id146 . -30) (undo-tree-id147 . -30) (undo-tree-id148 . -30) (undo-tree-id149 . -30) (undo-tree-id150 . -30) (undo-tree-id151 . -30) (undo-tree-id152 . -30) (undo-tree-id153 . -31) (undo-tree-id154 . -31) (undo-tree-id155 . -30) (undo-tree-id156 . -32) (undo-tree-id157 . -32) (undo-tree-id158 . -31) (undo-tree-id159 . -33) (undo-tree-id160 . -33) (undo-tree-id161 . -32) (undo-tree-id162 . -34) (undo-tree-id163 . -34) (undo-tree-id164 . -33) (undo-tree-id165 . -65) (undo-tree-id166 . -34) (undo-tree-id167 . -55) (undo-tree-id168 . -55) (undo-tree-id169 . -34) (undo-tree-id170 . -30) (undo-tree-id171 . -55) (undo-tree-id172 . -30) (undo-tree-id173 . -30) (undo-tree-id174 . -34) (undo-tree-id175 . -30) (undo-tree-id176 . 31) (undo-tree-id177 . -37) (undo-tree-id178 . -4) (undo-tree-id179 . -34) (undo-tree-id180 . -4) (undo-tree-id181 . -34) (undo-tree-id182 . -65) (undo-tree-id183 . -29) (undo-tree-id184 . -63) (undo-tree-id185 . -29) (undo-tree-id186 . -64) (undo-tree-id187 . -63) (undo-tree-id188 . -64) (undo-tree-id189 . -64) (undo-tree-id190 . -65) (undo-tree-id191 . -64) (undo-tree-id192 . -65) (undo-tree-id193 . -65) (undo-tree-id194 . -65) (undo-tree-id195 . -65) 24191 (t 24596 1466 556212 990000)) nil (24596 1477 721942 46000) 0 nil]) ((nil rear-nonsticky nil 24180 . 24181) (nil fontified nil 24160 . 24181) (24160 . 24181)) nil (24596 1466 545975 730000) 0 (:register 1)]) ((24156 . 24160)) nil (24596 1466 545987 68000) 0 nil]) ((24156 . 24164)) nil (24596 1466 545991 789000) 0 nil]) ((24155 . 24156) (t 24596 1438 132941 231000)) nil (24596 1466 545995 858000) 0 nil]) ((24157 . 24346) (#("    The del keyword is used to delete objects. In Python everything is an object, so the del keyword can also be used to delete variables, lists, or parts of a list etc.        " 0 4 (fontified t) 4 5 (shr-indentation nil wrap-prefix #2="" fontified t) 5 7 (wrap-prefix #2# fontified t) 7 8 (wrap-prefix #2# fontified t) 8 11 (wrap-prefix #2# fontified t) 11 12 (wrap-prefix #2# fontified t) 12 19 (wrap-prefix #2# fontified t) 19 20 (wrap-prefix #2# fontified t) 20 22 (wrap-prefix #2# fontified t face #3=(writegood-passive-voice-face)) 22 23 (wrap-prefix #2# fontified t face #3#) 23 27 (wrap-prefix #2# fontified t face #3#) 27 28 (wrap-prefix #2# fontified t) 28 30 (wrap-prefix #2# fontified t) 30 31 (wrap-prefix #2# fontified t) 31 37 (wrap-prefix #2# fontified t) 37 38 (wrap-prefix #2# fontified t) 38 46 (wrap-prefix #2# fontified t) 46 47 (wrap-prefix #2# fontified t) 47 49 (wrap-prefix #2# fontified t) 49 50 (wrap-prefix #2# fontified t) 50 56 (wrap-prefix #2# fontified t) 56 57 (wrap-prefix #2# fontified t) 57 67 (wrap-prefix #2# fontified t) 67 68 (wrap-prefix #2# fontified t) 68 70 (wrap-prefix #2# fontified t) 70 71 (wrap-prefix #2# fontified t) 71 73 (wrap-prefix #2# fontified t) 73 74 (wrap-prefix #2# fontified t) 74 81 (wrap-prefix #2# fontified t) 81 82 (wrap-prefix #2# fontified t) 82 84 (wrap-prefix #2# fontified t) 84 85 (wrap-prefix #2# fontified t) 85 88 (wrap-prefix #2# fontified t) 88 89 (wrap-prefix #2# fontified t) 89 92 (wrap-prefix #2# fontified t) 92 93 (wrap-prefix #2# fontified t) 93 100 (wrap-prefix #2# fontified t) 100 101 (wrap-prefix #2# fontified t) 101 104 (wrap-prefix #2# fontified t) 104 105 (wrap-prefix #2# fontified t) 105 109 (wrap-prefix #2# fontified t) 109 110 (wrap-prefix #2# fontified t) 110 112 (wrap-prefix #2# fontified t face #4=(writegood-passive-voice-face)) 112 113 (wrap-prefix #2# fontified t face #4#) 113 117 (wrap-prefix #2# fontified t face #4#) 117 118 (wrap-prefix #2# fontified t) 118 120 (wrap-prefix #2# fontified t) 120 121 (wrap-prefix #2# fontified t) 121 127 (wrap-prefix #2# fontified t) 127 128 (wrap-prefix #2# fontified t) 128 138 (wrap-prefix #2# fontified t) 138 139 (wrap-prefix #2# fontified t) 139 145 (wrap-prefix #2# fontified t) 145 146 (wrap-prefix #2# fontified t) 146 148 (wrap-prefix #2# fontified t) 148 149 (wrap-prefix #2# fontified t) 149 154 (wrap-prefix #2# fontified t) 154 155 (wrap-prefix #2# fontified t) 155 157 (wrap-prefix #2# fontified t) 157 158 (wrap-prefix #2# fontified t) 158 159 (wrap-prefix #2# fontified t) 159 160 (wrap-prefix #2# fontified t) 160 164 (wrap-prefix #2# fontified t) 164 165 (wrap-prefix #2# fontified t) 165 168 (wrap-prefix #2# fontified t) 168 169 (wrap-prefix #2# fontified t) 169 177 (fontified t)) . -24157) (undo-tree-id14 . -177) (undo-tree-id15 . -177) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -1) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -2) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -3) (undo-tree-id27 . -4) (undo-tree-id28 . -169) (undo-tree-id29 . -169) (undo-tree-id30 . -4) (undo-tree-id31 . -169) (undo-tree-id32 . -169) (undo-tree-id33 . -169) (undo-tree-id34 . -4) (undo-tree-id35 . -177) (undo-tree-id36 . -177) 24334 (t 24596 1436 412985 288000)) nil (24596 1438 122662 160000) 0 (:register 1)]) ((nil rear-nonsticky nil 24325 . 24326) (nil fontified nil 24322 . 24326) (nil fontified nil 24321 . 24322) (nil fontified nil 24317 . 24321) (nil fontified nil 24316 . 24317) (nil fontified nil 24315 . 24316) (nil fontified nil 24314 . 24315) (nil fontified nil 24312 . 24314) (nil fontified nil 24311 . 24312) (nil fontified nil 24306 . 24311) (nil fontified nil 24305 . 24306) (nil fontified nil 24303 . 24305) (nil fontified nil 24302 . 24303) (nil fontified nil 24296 . 24302) (nil fontified nil 24295 . 24296) (nil fontified nil 24285 . 24295) (nil fontified nil 24284 . 24285) (nil fontified nil 24278 . 24284) (nil fontified nil 24277 . 24278) (nil fontified nil 24275 . 24277) (nil fontified nil 24274 . 24275) (nil fontified nil 24270 . 24274) (nil fontified nil 24269 . 24270) (nil fontified nil 24267 . 24269) (nil fontified nil 24266 . 24267) (nil fontified nil 24262 . 24266) (nil fontified nil 24261 . 24262) (nil fontified nil 24258 . 24261) (nil fontified nil 24257 . 24258) (nil fontified nil 24250 . 24257) (nil fontified nil 24249 . 24250) (nil fontified nil 24246 . 24249) (nil fontified nil 24245 . 24246) (nil fontified nil 24242 . 24245) (nil fontified nil 24241 . 24242) (nil fontified nil 24239 . 24241) (nil fontified nil 24238 . 24239) (nil fontified nil 24231 . 24238) (nil fontified nil 24230 . 24231) (nil fontified nil 24228 . 24230) (nil fontified nil 24227 . 24228) (nil fontified nil 24225 . 24227) (nil fontified nil 24224 . 24225) (nil fontified nil 24214 . 24224) (nil fontified nil 24213 . 24214) (nil fontified nil 24207 . 24213) (nil fontified nil 24206 . 24207) (nil fontified nil 24204 . 24206) (nil fontified nil 24203 . 24204) (nil fontified nil 24195 . 24203) (nil fontified nil 24194 . 24195) (nil fontified nil 24188 . 24194) (nil fontified nil 24187 . 24188) (nil fontified nil 24185 . 24187) (nil fontified nil 24184 . 24185) (nil fontified nil 24180 . 24184) (nil fontified nil 24179 . 24180) (nil fontified nil 24177 . 24179) (nil fontified nil 24176 . 24177) (nil fontified nil 24169 . 24176) (nil fontified nil 24168 . 24169) (nil fontified nil 24165 . 24168) (nil fontified nil 24164 . 24165) (nil fontified nil 24162 . 24164) (nil fontified nil 24161 . 24162) (24161 . 24326)) nil (24596 1436 402893 149000) 0 (:register 1)]) ((24157 . 24161)) nil (24596 1436 402919 151000) 0 nil]) ((24157 . 24165)) nil (24596 1436 402924 420000) 0 nil]) ((24155 . 24157) (t 24596 1381 678386 641000)) nil (24596 1436 402928 777000) 0 nil]) ((24154 . 24155) (t 24596 1380 846407 931000)) nil (24596 1381 668332 94000) 0 (:register 1)]) ((24140 . 24154)) nil (24596 1380 836089 735000) 0 (:register 1)]) ((#(" " 0 1 (fontified t)) . -24140) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t)) . -24141) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 24142) nil (24596 1380 836148 903000) 0 nil]) ((24130 . 24142)) nil (24596 1380 836158 362000) 0 nil]) ((24120 . 24130) (t 24595 57703 547201 367000)) nil (24596 1380 836162 180000) 0 nil]) nil nil (24596 1374 681856 200000) 0 (:register 94)] #5# 2962 26 nil)