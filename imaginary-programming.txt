imaginary programming
    To make an analogy, imaginary programming
    is a type of programming much like
    pure-functional, where the functions may
    be 'contaminated', not by state but by
    dependency on or contamination by a
    language model.

ordinary programming
    Programming with functions that do not
    have an imaginary dimension (they do not
    take a language model as a parameter and
    the result of ordinary code is not
    polluted by a language model).

holographic programming
    [type of imaginary programming]

    This is like imaginary programming but
    where the language models are trained on
    software.

    The code being written, therefore, is
    employing associations made between
    elements of the code, how that code is
    used and how it is described, to build
    applications.

    This lets you code within the hyperspace
    of a language model to enable things like:
    - reflection
    - inference in place of computation