"b377a7a19acde205781063a68d42d6fec08fcc4e"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#12=[nil nil ((1563 . 1564) (t 24596 47379 164476 936000)) nil (24596 47380 147529 489000) 0 nil]) ((1501 . 1502)) nil (24596 47379 147712 122000) 0 (:register 1)]) ((#("h" 0 1 (fontified t)) . 1501)) nil (24596 47379 147722 394000) 0 nil]) ((1497 . 1563) (#("    has a small architectural
    variation from the encoder block" 0 30 (fontified t) 30 66 (fontified t insert-in-front-hooks #2=(annotate--remove-annotation-property))) . -1497) (undo-tree-id0 . -30) (undo-tree-id1 . -66) (undo-tree-id2 . -66) (undo-tree-id3 . -66) (undo-tree-id4 . -29) (undo-tree-id5 . -30) (undo-tree-id6 . -66) (undo-tree-id7 . -29) 1563) nil (24596 47379 147768 723000) 0 nil]) ((1497 . 1563) (#("has a small architectural
variation from the encoder block" 0 3 (wrap-prefix #1="" fontified t) 3 4 (wrap-prefix #1# fontified t) 4 5 (wrap-prefix #1# fontified t) 5 6 (wrap-prefix #1# fontified t) 6 11 (wrap-prefix #1# fontified t) 11 12 (wrap-prefix #1# fontified t) 12 25 (wrap-prefix #1# fontified t) 25 26 (wrap-prefix #1# fontified t) 26 35 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 35 36 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 36 40 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 40 41 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 41 44 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 44 45 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 45 52 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 52 53 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 53 57 (wrap-prefix #1# fontified t insert-in-front-hooks #2#) 57 58 (wrap-prefix #1# fontified t insert-in-front-hooks #2#)) . -1497) (undo-tree-id8 . -26) (undo-tree-id9 . -58) (undo-tree-id10 . -58) (undo-tree-id11 . -26) (undo-tree-id12 . -58) (undo-tree-id13 . -58) (undo-tree-id14 . -26) (undo-tree-id15 . -26) (undo-tree-id16 . -58) (undo-tree-id17 . -26) (undo-tree-id18 . -58) (undo-tree-id19 . -25) (undo-tree-id20 . -26) (undo-tree-id21 . -58) (undo-tree-id22 . -25) 1555) nil (24596 47379 147818 294000) 0 nil]) ((nil rear-nonsticky nil 1554 . 1555) (nil fontified nil 1550 . 1555) (nil fontified nil 1549 . 1550) (nil fontified nil 1542 . 1549) (nil fontified nil 1541 . 1542) (nil fontified nil 1538 . 1541) (nil fontified nil 1537 . 1538) (nil fontified nil 1533 . 1537) (nil fontified nil 1532 . 1533) (nil fontified nil 1523 . 1532) (nil fontified nil 1522 . 1523) (nil fontified nil 1509 . 1522) (nil fontified nil 1508 . 1509) (nil fontified nil 1503 . 1508) (nil fontified nil 1502 . 1503) (nil fontified nil 1501 . 1502) (nil fontified nil 1500 . 1501) (nil fontified nil 1497 . 1500) (1497 . 1555) (1495 . 1497) (t 24596 43694 518255 486000) (1457 . 1497) 1 (t 24596 43688 838400 423000) (1440 . 1441) (t 24596 43685 878475 953000) (1437 . 1454) (#("block" 0 5 (fontified nil)) . 1437) (t 24596 43681 694582 715000) (1417 . 1444) 1 (t 24596 43668 214926 675000) (1396 . 1400) (t 24596 43666 134979 749000) (1293 . 1413) 1 (t 24596 43633 779805 316000) (1291 . 1333) 1 (t 24596 43609 264430 810000) (1242 . 1291) (t 24596 43605 80537 557000) (1176 . 1195) (#(" stack is" 0 9 (fontified nil)) . 1176) (t 24596 43598 376708 595000) (1138 . 1171) (#("En" 0 2 (fontified nil)) . 1138) 1 (t 24596 43581 777132 93000) (1132 . 1201) 1 (t 24596 43544 682078 433000) (990 . 1132) 1 (t 24596 43517 578769 818000) (965 . 990) (t 24595 58828 473653 582000)) nil (24596 47379 147876 307000) 0 nil]) (nil undo-tree-canary) nil (24596 47379 147892 578000) 0 nil]) ((650 . 965) (#("    Self-attention causality: in the multi-head
   attention blocks used in the decoder, this
   mask is used to force predictions to only
   attend to the tokens at previous positions,
   so that the model can be used
   autoregressively at inference time.

   This corresponds to parameter `attn_mask`." 0 48 (fontified t) 48 102 (fontified t) 102 109 (face (writegood-passive-voice-face) fontified t) 109 211 (fontified t) 211 218 (face (writegood-passive-voice-face) fontified t) 218 304 (fontified t)) . -650) (undo-tree-id0 . -304) (undo-tree-id1 . -259) (undo-tree-id2 . -304) (undo-tree-id3 . -304) (undo-tree-id4 . -259) (undo-tree-id5 . -304) (undo-tree-id6 . -258) (undo-tree-id7 . -259) (undo-tree-id8 . -219) (undo-tree-id9 . -258) (undo-tree-id10 . -186) (undo-tree-id11 . -219) (undo-tree-id12 . -139) (undo-tree-id13 . -186) (undo-tree-id14 . -94) (undo-tree-id15 . -139) (undo-tree-id16 . -48) (undo-tree-id17 . -94) (undo-tree-id18 . -48) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -304) (undo-tree-id23 . -47) (undo-tree-id24 . -259) (undo-tree-id25 . -304) (undo-tree-id26 . -47) 954) nil (24595 58828 461320 35000) 0 (:register 94)]) ((650 . 651) (t 24595 58819 313874 869000)) nil (24595 58828 461348 390000) 0 nil]) ((915 . 916)) nil (24595 58819 300697 270000) 0 (:register 94)]) ((#("   " 0 3 (fontified t)) . 915)) nil (24595 58819 300706 914000) 0 nil]) ((#("
" 0 1 (fontified t insert-in-front-hooks (annotate--remove-annotation-property))) . 915) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (24595 58819 300720 922000) 0 nil]) ((908 . 911)) nil (24595 58819 300725 425000) 0 nil]) ((906 . 908)) nil (24595 58819 300728 383000) 0 nil]) ((#(" " 0 1 (fontified t)) . -906) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 907 (t 24595 58809 374114 895000)) nil (24595 58819 300740 759000) 0 nil]) ((650 . 952) (#("   Self-attention causality: in the multi-head attention blocks used in the decoder,
     this mask is used to force predictions to only attend to the tokens at previous
     positions, so that the model can be used autoregressively at inference time. This
     corresponds to parameter `attn_mask`." 0 3 (markdown-list-item #3=((1553 1839 3 5 "* " nil (1553 1558 1553 1556 1556 1557 1557 1558))) fontified t) 3 84 (markdown-list-item #3# fontified t) 84 85 (markdown-list-item #3# fontified t) 85 90 (markdown-list-item #3# fontified t) 90 100 (markdown-list-item #3# fontified t) 100 107 (markdown-list-item #3# fontified t face (writegood-passive-voice-face)) 107 169 (markdown-list-item #3# fontified t) 169 175 (markdown-list-item #3# fontified t) 175 208 (markdown-list-item #3# fontified t) 208 215 (markdown-list-item #3# fontified t face (writegood-passive-voice-face)) 215 256 (markdown-list-item #3# fontified t) 256 262 (markdown-list-item #3# fontified t) 262 287 (markdown-list-item #3# fontified t) 287 288 (markdown-list-item #3# fontified t) 288 297 (markdown-list-item #3# fontified t) 297 298 (markdown-list-item #3# fontified t) 298 299 (markdown-list-item #3# fontified t)) . -650) (undo-tree-id8 . -257) (undo-tree-id9 . -299) (undo-tree-id10 . -299) (undo-tree-id11 . -299) (undo-tree-id12 . -299) (undo-tree-id13 . -257) (undo-tree-id14 . -299) (undo-tree-id15 . -257) (undo-tree-id16 . -257) (undo-tree-id17 . -257) (undo-tree-id18 . -170) (undo-tree-id19 . -257) (undo-tree-id20 . -85) (undo-tree-id21 . -170) (undo-tree-id22 . -85) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -299) (undo-tree-id32 . -84) (undo-tree-id33 . -257) (undo-tree-id34 . -299) (undo-tree-id35 . -84) (undo-tree-id36 . -299) 949) nil (24595 58809 365717 836000) 0 (:register 1)]) ((#(" " 0 1 (markdown-list-item #3# fontified t)) . 653) (#("*" 0 1 (display #6=#("â€¢" 0 1 (face markdown-list-face)) markdown-list-item #3# fontified t)) . 653)) nil (24595 58809 365765 158000) 0 nil]) ((#("
" 0 1 (fontified t)) . 650) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (24595 58809 365801 759000) 0 nil]) ((#("  masking them. This corresponds to parameter `key_padding_mask`." 0 2 (markdown-list-item #4=((1402 1642 3 5 "* " nil (1402 1407 1402 1405 1405 1406 1406 1407))) fontified t) 2 46 (markdown-list-item #4# fontified t) 46 47 (markdown-list-item #4# fontified t) 47 63 (markdown-list-item #4# fontified t) 63 64 (markdown-list-item #4# fontified t) 64 65 (markdown-list-item #4# fontified t)) . 650) (undo-tree-id41 . -65)) nil (24595 58809 365829 540000) 0 nil]) ((#("
" 0 1 (markdown-list-item #4# fontified t)) . 650) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1)) nil (24595 58809 365866 92000) 0 nil]) ((#("* Padding: in the multi-head attention, the padding tokens are explicitly ignored by" 0 1 (display #6# markdown-list-item #4# fontified t) 1 18 (markdown-list-item #4# fontified t) 18 38 (supertype sx-button evaporate t action sx-button-follow-link type sx-button-link sx-button-copy #5="https://github.com/pytorch/fairseq/blob/master/fairseq/modules/multihead_attention.py" sx-button-url #5# button #7=(t) fontified t) 38 84 (markdown-list-item #4# fontified t)) . 650) (undo-tree-id46 . -84) (t 24595 58803 922246 500000)) nil (24595 58809 365876 484000) 0 nil]) ((nil rear-nonsticky nil 1101 . 1102) (nil fontified nil 1101 . 1102) (nil invisible markdown-markup 1100 . 1101) (nil fontified nil 1100 . 1101) (nil fontified nil 1091 . 1100) (nil invisible markdown-markup 1090 . 1091) (nil fontified nil 1090 . 1091) (nil fontified nil 1065 . 1090) (nil fontified nil 1059 . 1065) (nil fontified nil 978 . 1059) (nil fontified nil 972 . 978) (nil fontified nil 893 . 972) (nil fontified nil 887 . 893) (nil fontified nil 805 . 887) (nil fontified nil 804 . 805) (nil fontified nil 801 . 804) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (nil invisible markdown-markup 798 . 799) (nil fontified nil 798 . 799) (nil fontified nil 782 . 798) (nil invisible markdown-markup 781 . 782) (nil fontified nil 781 . 782) (nil fontified nil 737 . 781) (nil fontified nil 734 . 737) (nil fontified nil 688 . 734) (nil mouse-face highlight 668 . 688) (nil keymap (keymap (119 . sx-button-copy) (header-line keymap (mouse-2 . push-button)) (mode-line keymap (mouse-2 . push-button)) (mouse-2 . push-button) (13 . push-button)) 668 . 688) (nil help-echo #8=#("mouse-1, RET: visit github.com/â€¦ -- w: copy URL" 12 20 (face minibuffer-prompt) 20 32 (face font-lock-function-name-face) 32 36 (face minibuffer-prompt) 37 47 (face minibuffer-prompt)) 668 . 688) (nil fontified nil 668 . 688) (nil follow-link t 668 . 688) (nil category sx-button-link-button 668 . 688) (nil fontified nil 651 . 668) (nil fontified nil 650 . 651) (nil button nil 668 . 688) (nil help-echo "mouse-2, RET: Push this button" 668 . 688) (nil sx-button-url nil 668 . 688) (nil sx-button-copy nil 668 . 688) (nil category nil 668 . 688) (nil supertype nil 668 . 688) (nil follow-link nil 668 . 688) (nil rear-nonsticky nil 668 . 688) (nil evaporate nil 668 . 688) (nil action nil 668 . 688) (nil type nil 668 . 688) (nil keymap nil 668 . 688) (nil mouse-face nil 668 . 688) (nil face nil 668 . 688) (nil button #7# 668 . 688) (nil help-echo #8# 668 . 688) (nil sx-button-url #5# 668 . 688) (nil sx-button-copy #5# 668 . 688) (nil category sx-button-link-button 668 . 688) (nil fontified nil 668 . 688) (650 . 1102)) nil (24595 58803 909190 853000) 0 (:register 1)]) ((648 . 650) (t 24595 58791 250552 258000)) nil (24595 58803 909225 499000) 0 nil]) ((474 . 648) (#("https://datascience.stackexchange.com/questions/65067/proper-masking-in-the-transformer-model" 0 92 (fontified t face org-link mouse-face highlight keymap #11=(keymap (follow-link . mouse-face) (mouse-2 . org-open-at-point) (backtab . org-previous-link) (tab . org-next-link) (return . org-open-at-point)) help-echo #10="LINK: https://datascience.stackexchange.com/questions/65067/proper-masking-in-the-transformer-model" htmlize-link #9=(:uri "https://datascience.stackexchange.com/questions/65067/proper-masking-in-the-transformer-model") font-lock-multiline t) 92 93 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link mouse-face highlight keymap #11# help-echo #10# htmlize-link #9# font-lock-multiline t)) . -474) (undo-tree-id0 . -93) (undo-tree-id1 . -93) (undo-tree-id2 . -93) (undo-tree-id3 . -93) (undo-tree-id4 . -93) (undo-tree-id5 . -93) (undo-tree-id6 . -93) (undo-tree-id7 . -93) 567) nil (24595 58791 237520 260000) 0 (:register 1)]) ((nil rear-nonsticky nil 566 . 567) (nil fontified nil 474 . 567) (474 . 567)) nil (24595 58791 237534 460000) 0 nil]) ((470 . 474) (t 24595 58765 479173 526000)) nil (24595 58791 237540 504000) 0 nil]) ((334 . 470) (t 24595 38579 323377 573000)) nil (24595 58765 470039 472000) 0 (:register 1)]) nil nil (24595 58740 623496 146000) 0 (:register 94)] #12# 3091 27 nil)